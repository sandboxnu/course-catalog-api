name: Tests

on:
  pull_request:
  push:
    branches:
      - master
jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_MULTIPLE_DATABASES: searchneu_dev,searchneu_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD:
        ports:
          - 5432:5432
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.1.0
        env:
          discovery.type: single-node
        ports:
          - 9200:9200
    env:
      TWILIO_ACCOUNT_SID: AC_dummy_value_so_tests_dont_error_out
      TWILIO_AUTH_TOKEN: 123
      elasticURL: "http://localhost:9200"
      NODE_COVERALLS_DEBUG: 1
    steps:
      - uses: actions/checkout@v2
      - name: install node v14.19
        uses: actions/setup-node@v2
        with:
          node-version: "14.19"
      - uses: bahmutov/npm-install@v1
      - run: yarn test --coverage
      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: General tests
          parallel: true
      - run: yarn dbtest --coverage
      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: Database tests
          parallel: true

  end_to_end:
    name: End-to-end tests
    runs-on: ubuntu-latest
    needs: tests
    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_MULTIPLE_DATABASES: searchneu_dev,searchneu_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD:
        ports:
          - 5432:5432
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.1.0
        env:
          discovery.type: single-node
        ports:
          - 9200:9200
    env:
      TWILIO_ACCOUNT_SID: AC_dummy_value_so_tests_dont_error_out
      TWILIO_AUTH_TOKEN: 123
      elasticURL: "http://localhost:9200"
      NODE_COVERALLS_DEBUG: 1
      NODE_ENV: dev
      DEV: true
    steps:
      - uses: actions/checkout@v2
      - name: install node v14.19
        uses: actions/setup-node@v2
        with:
          node-version: "14.19"
      - uses: bahmutov/npm-install@v1
      - run: yarn add unzip
      - run: unzip ./data/cache_2022_summer.zip
      - run: yarn db:migrate
      - run: yarn db:refresh
      - run: yarn dev &
      - run: yarn scrape
      - run: yarn scrape
      - name: Checks that 'yarn dev' actually starts the API server
        run: curl -Is http://localhost:4000/.well-known/apollo/server-health | head -1 | grep -q 200
      - run: yarn jest -i --projects tests/workflow_tests --verbose --coverage
      - run: cd ./tests/workflow_tests && ls -lA
      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: End to end tests
          parallel: true
          path-to-lcov: "./tests/workflow_tests/coverage/lcov.info"

      #### Some useful CLI queries to help troubleshoot
      # psql -U postgres -h localhost -p 5432 -d searchneu_dev -c 'SELECT count(*) from sections'
      # - run: 'curl ''http://localhost:4000'' -X POST -H ''content-type: application/json'' --data ''{ "query": "query { search(termId: \"202250\", query: \"fundies\") { nodes { ... on ClassOccurrence { name subject classId } } } }" }'''

      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
          verbose: true
