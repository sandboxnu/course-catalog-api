name: End-to-end testing

on:
  pull_request:
  push:
    branches:
      - master
jobs:
  tests:
    name: End-to-end testing
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_MULTIPLE_DATABASES: searchneu_dev,searchneu_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD:
        ports:
          - 5432:5432
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.1.0
        env:
          discovery.type: single-node
        ports:
          - 9200:9200
    env:
      TWILIO_ACCOUNT_SID: AC_dummy_value_so_tests_dont_error_out
      TWILIO_AUTH_TOKEN: 123
      elasticURL: "http://localhost:9200"
      NODE_COVERALLS_DEBUG: 1
    steps:
      - uses: actions/checkout@v2
      - name: install node v14.19
        uses: actions/setup-node@v2
        with:
          node-version: "14.19"
      - uses: bahmutov/npm-install@v1

      # This checks when `infrastructure/dev/docker-compose.yml` was last updated.
      # If this step fails, the file has been updated, and we need to make sure that
      # our `services` (a section in the start of this file) matches the new docker-compose setup
      #   Go through it to make sure it's consistent.
      #   Then, update the commit hash below to match the latest one.
      - run: git log -n 1 --pretty=format:%H -- ./infrastructure/dev/docker-compose.yml
      - run: >
          git log -n 1 --pretty=format:%H -- ./infrastructure/dev/docker-compose.yml |
          grep -q bc224f1dae56f02654de3aa2201d304afe38bf89

      # - run: yarn db:migrate
      # - run: yarn db:refresh
      # # - run: yarn scrape
      # - run: yarn scrape
      # - run: yarn dev
